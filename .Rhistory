source('C:/Users/MAL181/Dropbox/2019/rmuddles/deIDent/tangles/pkg/R/tangles.R')
source('C:/Users/MAL181/Dropbox/2019/rmuddles/deIDent/tangles/pkg/R/tangler.R')
library(ithir);library(digest)
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
tangles.out<- tangles(data = xyData, depth = 5, rasterdata = FALSE, raster_object = FALSE)
tangles.out
str(tangles.out)
head(tangles.out[[1]])
# tangler
tangled.origi<- tangler(data = tangles.out[[1]], tanglerInfo = tangles.out[[2]], raster_object = FALSE, stub = "hv1")
View(tangled.origi)
View(xyData)
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
tangles.out<- tangles(data = xyData, depth = 5, rasterdata = FALSE, raster_object = FALSE)
tangles.out
str(tangles.out)
head(tangles.out[[1]])
tangles.out[[2]]
# tangler
tangled.origi<- tangler(data = tangles.out[[1]], tanglerInfo = tangles.out[[2]], raster_object = FALSE, stub = "hv1")
View(tangled.origi)
getwd()
# tangler
tangled.origi<- tangler(data = as.matrix(tangles.out[[1]]), tanglerInfo = tangles.out[[2]], raster_object = FALSE, stub = "hv1")
View(tangled.origi)
View(HV_subsoilpH)
library(ithir);library(digest)
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
tangles.out<- tangles(data = xyData, depth = 3, rasterdata = FALSE, raster_object = FALSE)
tangles.out
str(tangles.out)
head(tangles.out[[1]])
# tangler
tangled.origi<- tangler(data = as.matrix(tangles.out[[1]]), tanglerInfo = tangles.out[[2]], raster_object = FALSE, stub = "hv1")
View(tangled.origi)
## POINT DATA tangles
library(ithir);library(digest);library(tangles)
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
# deidentify with 5 levels of abstraction
tangles.out<- tangles(data = xyData, depth = 5, rasterdata = FALSE, raster_object = FALSE)
# RASTER DATA
library(raster)
data("hunterCovariates_sub")
str(hunterCovariates_sub)
tangled.origi<- tangler(data = hunterCovariates_sub, tanglerInfo = tangles.out[[2]], raster_object = TRUE, stub = "hv1")
## POINT DATA tangles
library(ithir);library(digest);library(tangles)
## POINT DATA tangles
library(ithir);library(digest)
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
# deidentify with 5 levels of abstraction
tangles.out<- tangles(data = xyData, depth = 5, rasterdata = TRUE, raster_object = FALSE)
# tangle associated RASTER DATA
library(raster)
data("hunterCovariates_sub")
str(hunterCovariates_sub)
tangled.origi<- tangler(data = hunterCovariates_sub, tanglerInfo = tangles.out[[2]], raster_object = TRUE, stub = "hv1")
# PLOT
plot(hunterCovariates_sub[[1]])
coordinates(dat.xy)<- ~ X + Y
plot(dat.xy, add=T)
#deidentified
plot(tangled.origi[[1]])
ndat.xy<- as.data.frame(tangles.out[[1]])
coordinates(ndat.xy)<- X + Y
names(ndat.xy)
coordinates(ndat.xy)<- ~ X + Y
plot(ndat.xy, add = T)
# PLOT (real)
par(mfrow=c(1,2))
plot(hunterCovariates_sub[[1]])
coordinates(dat.xy)<- ~ X + Y
plot(dat.xy, add=T)
#deidentified
plot(tangled.origi[[1]])
ndat.xy<- as.data.frame(tangles.out[[1]])
coordinates(ndat.xy)<- ~ X + Y
plot(ndat.xy, add = T)
?digest
tangles.out[[2]]
tangles.out[[2]][1]
tangles.out[[2]]
xxx<- tangles.out[[2]]
xxx[1]
xxx[2]
tanglerInfo<- tangles.out[[2]]
tanglerInfo[1]
xxx<- tanglerInfo[1]
tanglerInfo[1] == xxx
tanglerInfo[1]
as.character(tanglerInfo[1])
as.character(tanglerInfo[1]) == xxx
as.character(tanglerInfo[1]) =! xxx
as.character(tanglerInfo[1]) != xxx
source('C:/Users/MAL181/Dropbox/2019/rmuddles/deIDent/tangles/pkg/R/detangles.R')
# tangle the points
data("HV_subsoilpH")
str(HV_subsoilpH)
dat.xy<- HV_subsoilpH[,1:2]
xyData<- as.matrix(dat.xy)
tangles.out<- tangles(data = xyData, depth = 15, rasterdata = TRUE, raster_object = FALSE)
tangles.out
tangles.out<- tangles(data = xyData, depth = 5, rasterdata = TRUE, raster_object = FALSE)
tangles.out
# tangle raster data based on tangled points
data("hunterCovariates_sub")
str(hunterCovariates_sub)
tangled.origi<- tangler(data = hunterCovariates_sub, tanglerInfo = tangles.out[[2]], raster_object = TRUE, stub = "hv1")
tangled.origi
plot(tangled.origi[[1]])
# overlay tangle points
tp<- as.data.frame(tangles.out[[1]])
coordinates(tp)<- ~ X + Y
plot(tp, add=T)
tangles.out[[2]]
## detangles
# points
xyData<- as.matrix(tangles.out[[1]])
point_detang<- detangles(data=xyData, tanglerInfo=tangles.out[[2]], raster_object = FALSE, stub = "hv_fix", hash_key = "9ec140a1ed5ff8f80cbd10c7f92abe6a595d2b6ea85c719c3593d0ccc693c179")
#rasters
raster_detang<- detangles(data=tangled.origi, tanglerInfo=detangler.dat, raster_object = TRUE, stub = "hv_fix", hash_key = "9ec140a2ed5ff8f80cbd10c7f92abe6a595d2b6ea85c719c3593d0ccc693c179")
#rasters
raster_detang<- detangles(data=tangled.origi, tanglerInfo=tangles.out[[2]], raster_object = TRUE, stub = "hv_fix", hash_key = "9ec140a2ed5ff8f80cbd10c7f92abe6a595d2b6ea85c719c3593d0ccc693c179")
#rasters
raster_detang<- detangles(data=tangled.origi, tanglerInfo=tangles.out[[2]], raster_object = TRUE, stub = "hv_fix", hash_key = "9ec140a1ed5ff8f80cbd10c7f92abe6a595d2b6ea85c719c3593d0ccc693c179")
plot(raster_detang[[1]])
pdat<- as.data.frame(point_detang)
coordinates(pdat)<- ~X + Y
plot(pdat, add=T)
pdat
library(tangles)
library(tangles)
